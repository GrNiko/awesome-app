version: '3.8'
services:
  # ------------------------------------------------------------
  awesome-zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: awesome-zookeeper
    restart: unless-stopped
    ports:
      - 127.0.0.1:2181:2181
    environment:
      JVMFLAGS: "-Xmx256M -Xms128M"
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOO_AUTOPURGE_SNAPRETAINCOUNT: 10
      ZOO_AUTOPURGE_PURGEINTERVAL: 2
    volumes:
      - "./.volumes/zookeeper/data:/var/lib/zookeeper/data"
      - "./.volumes/zookeeper/lib-log:/var/lib/zookeeper/log"
      - "./.volumes/zookeeper/log:/var/log/zookeeper"
    healthcheck:
      test: "nc -w 5 -z localhost 2181 || exit -1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 120s
    networks:
      - awesome-network
  # ------------------------------------------------------------
  awesome-kafka:
    image: confluentinc/cp-enterprise-kafka:latest
    container_name: awesome-kafka
    restart: unless-stopped
    depends_on:
      awesome-zookeeper:
        condition: service_healthy
    ports:
      - 127.0.0.1:9092:29092
    expose:
      - 9092
    environment:
      KAFKA_HEAP_OPTS: '-Xmx512M -Xms256M'
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: awesome-zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://awesome-kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    volumes:
      - "./.volumes/kafka/data:/var/lib/kafka/data"
      - "./.volumes/kafka/log:/var/log/kafka"
    healthcheck:
      test: "nc -w 5 -z localhost 9093 || exit -1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 120s
    networks:
      - awesome-network
  # ------------------------------------------------------------
  awesome-kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: awesome-kafka-ui
    ports:
      - 127.0.0.1:8080:8080
    depends_on:
      - awesome-zookeeper
      - awesome-kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: awesome-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: awesome-kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: awesome-zookeeper:2181
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schemaregistry:8085
    networks:
      - awesome-network
  # ------------------------------------------------------------
  awesome-postgres:
    image: postgres:10.2
    container_name: awesome-postgres
    restart: unless-stopped
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: uwu
    ports:
      - 127.0.0.1:5432:5432
    expose:
      - 5432
    volumes:
      - ./.volume/postgres:/data/postgres
    networks:
      - awesome-network
  # ------------------------------------------------------------
  awesome-app:
    build: .
    container_name: awesome-micronaut-app
    restart: unless-stopped
    environment:
      DB_HOST: awesome-postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: 123
    ports:
      - 8081:8081
    depends_on:
      - awesome-postgres
      - awesome-kafka
    networks:
      - awesome-network
networks:
  awesome-network: